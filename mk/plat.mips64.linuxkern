# @copyright (c) 2017, Shenzhen Forward Industry Co.Ltd. All Rights Reserved.
# @author  huangjimin
# @date 2017-09-26
# @brief build infrastructure
# Default kernel source directory
ifeq ($(LINUX_KDIR),)
$(error "build kernel module, but $(CUR_MAKEFILE) can't detection LINUX_KDIR")
endif
# Default Linux include directory
ifeq (,$(LINUX_INCLUDE))
LINUX_INCLUDE := $(LINUX_KDIR)/include
endif
# Default architecture

ARCH = mips


# By default we exclude -Werror from arm kernel builds
CFGFLAGS += -Wall
CFGFLAGS += -I$(SDK)/app/linuxkern/include 



# Noisy kernel build
KBUILD_VERBOSE = 1

export ARCH KBUILD_VERBOSE LINUX_KDIR


# autoconf.h was moved in later kernels
AUTOCONF = $(LINUX_KDIR)/include/generated/autoconf.h
ifeq (,$(shell ls $(AUTOCONF) 2>/dev/null))
AUTOCONF = $(LINUX_KDIR)/include/linux/autoconf.h
endif

KCONFIG_H = $(LINUX_KDIR)/include/linux/kconfig.h
ifeq (,$(shell ls $(KCONFIG_H) 2>/dev/null))
KCONFIG_H = 
endif
# gcc system include path
SYSINC = $(shell $(CC) -print-search-dirs | grep install | cut -c 10-)include
ifeq (,$(KFLAGS))
KFLAGS := -nostdinc -isystem $(SYSINC) \
  -I$(LINUX_KDIR)/include \
  -I$(LINUX_KDIR)/arch/$(ARCH)/include \
  -I$(LINUX_KDIR)/arch/$(ARCH)/include/generated \
  -I$(LINUX_KDIR)/arch/$(ARCH)/include/uapi \
  -I$(LINUX_KDIR)/arch/$(ARCH)/include/generated/uapi \
  -I$(LINUX_KDIR)/arch/$(ARCH)/include/asm/mach-netlogic \
  -I$(LINUX_KDIR)/arch/$(ARCH)/include/asm/mach-generic \
  -I$(LINUX_KDIR)/include/uapi \
  -I$(LINUX_KDIR)/include/generated/uapi \
  $(if $(AUTOCONF),-include $(AUTOCONF)) \
  $(if ${KCONFIG_H}, -include $(KCONFIG_H)) \
  -DMODULE -march=xlp -mabi=64 -DABI_64 -msym32 -msoft-float -fno-pic -G 0 -mno-abicalls -mlong-calls -mplt -DSAL_BDE_XLP \
  -DPTRS_ARE_64BITS -DLONGS_ARE_64BITS -D__KERNEL__ -DNLM_HAL_NETLBOOT -DNLM_HAL_LINUX_KERNEL \
  -Wall -Wundef -Wstrict-prototypes  -Wno-trigraphs -O2 -fno-strict-aliasing -pipe -fomit-frame-pointer \
  -Wdeclaration-after-statement -Wno-pointer-sign
endif


# Extra variables.
EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)

comma = ,
basetarget = $(basename $(notdir $@))
modname = $(basetarget)

name-fix = $(subst $(comma),_,$(subst -,_,$1))
basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
modname_flags  = $(if $(filter 1,$(words $(modname))),\
-D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")

STD_CFLAGS += $(KFLAGS)

