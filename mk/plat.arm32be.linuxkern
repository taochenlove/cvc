# @copyright (c) 2017, Shenzhen Forward Industry Co.Ltd. All Rights Reserved.
# @author  huangjimin
# @date 2017-09-26
# @brief build infrastructure
ifeq ($(LINUX_KDIR),)
$(error "build kernel module, but $(CUR_MAKEFILE) can't detection LINUX_KDIR")
endif

# Default Linux include directory
ifeq (,$(LINUX_INCLUDE))
LINUX_INCLUDE := $(LINUX_KDIR)/include
endif
# Default architecture
ARCH = arm


# By default we exclude -Werror from arm kernel builds
CFGFLAGS += -Wall
CFGFLAGS += -I$(SDK)/app/linuxkern/include \
	    -I$(LINUX_INCLUDE) \
	    -I$(LINUX_INCLUDE)/asm/gcc \
	    -I$(LINUX_INCLUDE)/asm/mach-generic \
        -I$(LINUX_KDIR)/arch/$(ARCH)



# Noisy kernel build
KBUILD_VERBOSE = 1

export ARCH KBUILD_VERBOSE LINUX_KDIR


# autoconf.h was moved in later kernels
AUTOCONF = $(LINUX_KDIR)/include/generated/autoconf.h
ifeq (,$(shell ls $(AUTOCONF) 2>/dev/null))
AUTOCONF = $(LINUX_KDIR)/include/linux/autoconf.h
endif

# gcc system include path
SYSINC = $(shell $(CC) -print-search-dirs | grep install | cut -c 10-)include

ifeq (,$(KFLAGS))
KFLAGS := -nostdinc -isystem $(SYSINC) -I$(LINUX_KDIR)/include -I$(LINUX_KDIR)/arch/$(ARCH)/include \
  -include $(AUTOCONF) \
  -D__KERNEL__ -DMODULE\
  -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common \
  -maccumulate-outgoing-args -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 \
  -fomit-frame-pointer \
  -fno-stack-protector -Wdeclaration-after-statement -Wno-pointer-sign \
  -Os -pipe -msoft-float -mregparm=3 -freg-struct-return -mpreferred-stack-boundary=2 \
  -march=i686 -ffreestanding
endif


# Extra variables.
EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)

comma = ,
basetarget = $(basename $(notdir $@))
modname = $(basetarget)

name-fix = $(subst $(comma),_,$(subst -,_,$1))
basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
modname_flags  = $(if $(filter 1,$(words $(modname))),\
-D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")

STD_CFLAGS += $(KFLAGS)

